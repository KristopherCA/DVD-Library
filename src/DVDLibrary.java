import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import java.net.URL;
import javax.swing.UIManager;
import javax.swing.SwingUtilities;
import javax.swing.JFileChooser;
import java.io.File;
import java.io.PrintWriter;
import java.util.Scanner;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DVDLibrary.java
 *
 * Created on Feb 23, 2011, 10:38:46 PM
 */

/**
 *
 * @author Kris
 */
public class DVDLibrary extends javax.swing.JFrame {

    /** Creates new form DVDLibrary */
     public DVDLibrary() {
        initComponents();
        setLocationRelativeTo(null);   // center the application on the screen

         URL iconurl = getClass().getResource("dvdlib.jpg"); // get image
       if(iconurl != null)
       {
         ImageIcon ic = new ImageIcon(iconurl);
         setIconImage(ic.getImage());    // tell the frame to set is as its icon
        }
         //set look and feel
          try{
          String laf = UIManager.getSystemLookAndFeelClassName();
          UIManager.setLookAndFeel(laf); // tell the UIManager to change the look and feel
           SwingUtilities.updateComponentTreeUI(this); // tells swing to update components
        }
          
          catch (Exception ex)
        
        {
          System.out.println("Unable to change look and feel : "+ex.getMessage());
        }

         // get rid of the "all files" in the chooser
        javax.swing.filechooser.FileFilter ff =
           ( javax.swing.filechooser.FileFilter)dvdlibFileChooser.getFileFilter();
        dvdlibFileChooser.removeChoosableFileFilter(ff);
        //
        // add a text file filter

        dvdlibFileChooser.addChoosableFileFilter(new DVDFileFilter());

        statusLabel.setVisible(false);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dvdlibFileChooser = new javax.swing.JFileChooser();
        dvdprogramToolBar = new javax.swing.JToolBar();
        clearButton = new javax.swing.JButton();
        storeButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        infoPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        ratingLabel = new javax.swing.JLabel();
        runtimeLabel = new javax.swing.JLabel();
        genreLabel = new javax.swing.JLabel();
        threedimensionalLabel = new javax.swing.JLabel();
        titleTextField = new javax.swing.JTextField();
        ratingComboBox = new javax.swing.JComboBox();
        descriptionLabel = new javax.swing.JLabel();
        runtimeTextField = new javax.swing.JTextField();
        threedimensionalCheckBox = new javax.swing.JCheckBox();
        genreComboBox = new javax.swing.JComboBox();
        descriptionScrollPane = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        dvdlibraryScrollPane = new javax.swing.JScrollPane();
        dvdlibraryList = new javax.swing.JList();
        libraryMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newMenuItem = new javax.swing.JMenuItem();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveasMenuItem = new javax.swing.JMenuItem();
        filemenuSeparator = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        toolsMenu = new javax.swing.JMenu();
        clearMenuItem = new javax.swing.JMenuItem();
        storeMenuItem = new javax.swing.JMenuItem();
        updateMenuItem = new javax.swing.JMenuItem();
        toolsmenuSeparator = new javax.swing.JPopupMenu.Separator();
        deleteMenuItem = new javax.swing.JMenuItem();
        viewMenu = new javax.swing.JMenu();
        statusCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();
        helpMenu = new javax.swing.JMenu();
        helptopicsMenuItem = new javax.swing.JMenuItem();
        helpmenuSeparator = new javax.swing.JPopupMenu.Separator();
        aboutMenuItem = new javax.swing.JMenuItem();

        dvdlibFileChooser.setBackground(new java.awt.Color(0, 51, 51));

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("DVD Library");
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);

        dvdprogramToolBar.setBackground(new java.awt.Color(0, 0, 204));
        dvdprogramToolBar.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        dvdprogramToolBar.setRollover(true);
        dvdprogramToolBar.setFont(new java.awt.Font("Segoe Script", 0, 15)); // NOI18N

        clearButton.setBackground(new java.awt.Color(0, 0, 0));
        clearButton.setFont(new java.awt.Font("Stencil", 0, 10)); // NOI18N
        clearButton.setForeground(new java.awt.Color(255, 255, 255));
        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clear.png"))); // NOI18N
        clearButton.setText("Clear");
        clearButton.setToolTipText("Clear all fields");
        clearButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.gray, java.awt.Color.gray));
        clearButton.setFocusable(false);
        clearButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clearButton.setMaximumSize(new java.awt.Dimension(43, 53));
        clearButton.setMinimumSize(new java.awt.Dimension(43, 53));
        clearButton.setPreferredSize(new java.awt.Dimension(43, 53));
        clearButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        dvdprogramToolBar.add(clearButton);

        storeButton.setBackground(new java.awt.Color(0, 0, 0));
        storeButton.setFont(new java.awt.Font("Stencil", 0, 10)); // NOI18N
        storeButton.setForeground(new java.awt.Color(255, 255, 255));
        storeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/store.png"))); // NOI18N
        storeButton.setText("Store");
        storeButton.setToolTipText("Store new movie in DVD library");
        storeButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.gray, java.awt.Color.gray));
        storeButton.setFocusable(false);
        storeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        storeButton.setMaximumSize(new java.awt.Dimension(43, 53));
        storeButton.setMinimumSize(new java.awt.Dimension(43, 53));
        storeButton.setPreferredSize(new java.awt.Dimension(43, 53));
        storeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        storeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeButtonActionPerformed(evt);
            }
        });
        dvdprogramToolBar.add(storeButton);

        updateButton.setBackground(new java.awt.Color(0, 0, 0));
        updateButton.setFont(new java.awt.Font("Stencil", 0, 10)); // NOI18N
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/update.png"))); // NOI18N
        updateButton.setText("Update");
        updateButton.setToolTipText("Update DVD library");
        updateButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.gray, java.awt.Color.gray));
        updateButton.setFocusable(false);
        updateButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        updateButton.setMaximumSize(new java.awt.Dimension(43, 53));
        updateButton.setMinimumSize(new java.awt.Dimension(43, 53));
        updateButton.setPreferredSize(new java.awt.Dimension(43, 53));
        updateButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        dvdprogramToolBar.add(updateButton);

        deleteButton.setBackground(new java.awt.Color(0, 0, 0));
        deleteButton.setFont(new java.awt.Font("Stencil", 0, 10)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete.png"))); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.setToolTipText("Delete movie from DVD library");
        deleteButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.gray, java.awt.Color.gray));
        deleteButton.setFocusable(false);
        deleteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteButton.setMaximumSize(new java.awt.Dimension(43, 53));
        deleteButton.setMinimumSize(new java.awt.Dimension(43, 53));
        deleteButton.setPreferredSize(new java.awt.Dimension(43, 53));
        deleteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        dvdprogramToolBar.add(deleteButton);

        exitButton.setBackground(new java.awt.Color(0, 0, 0));
        exitButton.setFont(new java.awt.Font("Stencil", 0, 10)); // NOI18N
        exitButton.setForeground(new java.awt.Color(255, 255, 255));
        exitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit.png"))); // NOI18N
        exitButton.setText("Exit");
        exitButton.setToolTipText("Exit program");
        exitButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.gray, java.awt.Color.gray));
        exitButton.setFocusable(false);
        exitButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exitButton.setMaximumSize(new java.awt.Dimension(43, 53));
        exitButton.setMinimumSize(new java.awt.Dimension(43, 53));
        exitButton.setPreferredSize(new java.awt.Dimension(43, 53));
        exitButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        dvdprogramToolBar.add(exitButton);

        getContentPane().add(dvdprogramToolBar, java.awt.BorderLayout.NORTH);

        statusLabel.setBackground(new java.awt.Color(0, 102, 204));
        statusLabel.setFont(new java.awt.Font("Stencil", 0, 14)); // NOI18N
        statusLabel.setText("Status:");
        statusLabel.setToolTipText("Displays DVD Library's current status");
        statusLabel.setAlignmentY(0.0F);
        statusLabel.setAutoscrolls(true);
        statusLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        statusLabel.setIconTextGap(2);
        getContentPane().add(statusLabel, java.awt.BorderLayout.SOUTH);

        infoPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        infoPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        titleLabel.setText("Title");
        titleLabel.setToolTipText("");

        ratingLabel.setText("Rating");
        ratingLabel.setToolTipText("");

        runtimeLabel.setText("Runtime");
        runtimeLabel.setToolTipText("");

        genreLabel.setText("Genre");
        genreLabel.setToolTipText("");

        threedimensionalLabel.setText("3D");
        threedimensionalLabel.setToolTipText("");
        threedimensionalLabel.setVerifyInputWhenFocusTarget(false);

        titleTextField.setFont(new java.awt.Font("Segoe UI Symbol", 0, 13)); // NOI18N
        titleTextField.setToolTipText("Enter movie title");
        titleTextField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        titleTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        ratingComboBox.setFont(new java.awt.Font("Segoe UI Symbol", 0, 13)); // NOI18N
        ratingComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "G", "PG", "PG-13", "R", "NC-17" }));
        ratingComboBox.setSelectedIndex(-1);
        ratingComboBox.setToolTipText("Choose movie rating");
        ratingComboBox.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ratingComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ratingComboBoxActionPerformed(evt);
            }
        });

        descriptionLabel.setText("Description");

        runtimeTextField.setFont(new java.awt.Font("Segoe UI Symbol", 0, 13)); // NOI18N
        runtimeTextField.setToolTipText("Enter movie runtime in minutes");
        runtimeTextField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        runtimeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runtimeTextFieldActionPerformed(evt);
            }
        });

        threedimensionalCheckBox.setText("Yes");
        threedimensionalCheckBox.setToolTipText("Check only if movie is in 3D");
        threedimensionalCheckBox.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        threedimensionalCheckBox.setMargin(new java.awt.Insets(1, 1, 1, 1));
        threedimensionalCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threedimensionalCheckBoxActionPerformed(evt);
            }
        });

        genreComboBox.setFont(new java.awt.Font("Segoe UI Symbol", 0, 13)); // NOI18N
        genreComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Action", "Adult", "Adventure", "Animation", "Biography", "Children's", "Comedy", "Crime", "Disaster", "Documentary", "Drama ", "Espionage", " Fantasy ", "Horror", "Musical ", "Mystery ", "Romance", "Sci-Fi", "Short ", "Sports", "Thriller", "War", "Western" }));
        genreComboBox.setSelectedIndex(-1);
        genreComboBox.setToolTipText("Choose movie genre");
        genreComboBox.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        descriptionScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setFont(new java.awt.Font("Segoe UI Symbol", 0, 13)); // NOI18N
        descriptionTextArea.setRows(5);
        descriptionTextArea.setToolTipText("Enter paragraph description of movie");
        descriptionTextArea.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        descriptionScrollPane.setViewportView(descriptionTextArea);

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionLabel)
                    .addComponent(runtimeLabel)
                    .addComponent(titleLabel)
                    .addComponent(ratingLabel)
                    .addComponent(genreLabel)
                    .addComponent(threedimensionalLabel))
                .addGap(44, 44, 44)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(runtimeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                    .addComponent(ratingComboBox, 0, 106, Short.MAX_VALUE)
                    .addComponent(titleTextField)
                    .addComponent(genreComboBox, 0, 111, Short.MAX_VALUE)
                    .addComponent(threedimensionalCheckBox)
                    .addComponent(descriptionScrollPane, 0, 0, Short.MAX_VALUE))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        infoPanelLayout.setVerticalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(titleLabel)
                    .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ratingLabel)
                    .addComponent(ratingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(runtimeLabel)
                    .addComponent(runtimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionLabel)
                    .addComponent(descriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genreLabel))
                .addGap(18, 18, 18)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(threedimensionalCheckBox)
                    .addComponent(threedimensionalLabel))
                .addGap(79, 79, 79))
        );

        getContentPane().add(infoPanel, java.awt.BorderLayout.CENTER);

        dvdlibraryScrollPane.setPreferredSize(new java.awt.Dimension(165, 135));

        dvdlibraryList.setBackground(new java.awt.Color(0, 0, 0));
        dvdlibraryList.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        dvdlibraryList.setForeground(new java.awt.Color(255, 255, 255));
        dvdlibraryList.setModel(new DefaultListModel() );
        dvdlibraryList.setAlignmentX(0.0F);
        dvdlibraryList.setAlignmentY(0.0F);
        dvdlibraryList.setSelectionBackground(new java.awt.Color(0, 0, 0));
        dvdlibraryList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                dvdlibraryListValueChanged(evt);
            }
        });
        dvdlibraryScrollPane.setViewportView(dvdlibraryList);

        getContentPane().add(dvdlibraryScrollPane, java.awt.BorderLayout.LINE_END);

        libraryMenuBar.setBackground(new java.awt.Color(0, 0, 0));

        fileMenu.setBackground(new java.awt.Color(0, 0, 0));
        fileMenu.setMnemonic(KeyEvent.VK_F);
        fileMenu.setText("File");

        newMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newMenuItem.setText("New");
        newMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newMenuItem);

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        saveMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveMenuItem.setText("Save");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        saveasMenuItem.setText("Save As");
        saveasMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveasMenuItemActionPerformed1(evt);
            }
        });
        fileMenu.add(saveasMenuItem);
        fileMenu.add(filemenuSeparator);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        libraryMenuBar.add(fileMenu);

        toolsMenu.setBackground(new java.awt.Color(0, 0, 0));
        toolsMenu.setMnemonic(KeyEvent.VK_T);
        toolsMenu.setText("Tools");

        clearMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        clearMenuItem.setMnemonic(KeyEvent.VK_C);
        clearMenuItem.setText("Clear");
        clearMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(clearMenuItem);

        storeMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        storeMenuItem.setMnemonic(KeyEvent.VK_S);
        storeMenuItem.setText("Store");
        storeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(storeMenuItem);

        updateMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        updateMenuItem.setMnemonic(KeyEvent.VK_U);
        updateMenuItem.setText("Update");
        updateMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(updateMenuItem);
        toolsMenu.add(toolsmenuSeparator);

        deleteMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        deleteMenuItem.setMnemonic(KeyEvent.VK_D);
        deleteMenuItem.setText("Delete");
        deleteMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMenuItemActionPerformed(evt);
            }
        });
        toolsMenu.add(deleteMenuItem);

        libraryMenuBar.add(toolsMenu);

        viewMenu.setBackground(new java.awt.Color(0, 0, 0));
        viewMenu.setText("View");

        statusCheckBoxMenuItem.setText("Status");
        statusCheckBoxMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusCheckBoxMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(statusCheckBoxMenuItem);

        libraryMenuBar.add(viewMenu);

        helpMenu.setBackground(new java.awt.Color(0, 0, 0));
        helpMenu.setForeground(new java.awt.Color(0, 51, 51));
        helpMenu.setMnemonic(KeyEvent.VK_H);
        helpMenu.setText("Help");

        helptopicsMenuItem.setText("Help Topics");
        helpMenu.add(helptopicsMenuItem);
        helpMenu.add(helpmenuSeparator);

        aboutMenuItem.setText("About");
        aboutMenuItem.setDisplayedMnemonicIndex(0);
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        libraryMenuBar.add(helpMenu);

        setJMenuBar(libraryMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
 //exit the program
 System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
    //clear fields
        titleTextField.setText("");
        runtimeTextField.setText("");
        descriptionTextArea.setText("");
        threedimensionalCheckBox.setSelected(false);
        ratingComboBox.setSelectedIndex(-1);
        genreComboBox.setSelectedIndex(-1);
    }//GEN-LAST:event_clearButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed


        //get the selected item
 DVD  mydvd = (DVD)dvdlibraryList.getSelectedValue();
//if DVD list is not empty, update
 if(mydvd != null)
{
 mydvd.title= titleTextField.getText();
 mydvd.rating= ratingComboBox.getSelectedItem().toString();
 String runtimestring = runtimeTextField.getText();
 int runtime = Integer.parseInt(runtimestring);
 mydvd.runtime = runtime;
 mydvd.description= descriptionTextArea.getText();
 mydvd.genre= genreComboBox.getSelectedItem().toString();
 mydvd.threedimensional = threedimensionalCheckBox.isSelected();

 // tell the list box to show the updates
 dvdlibraryList.repaint();
}


    }//GEN-LAST:event_updateButtonActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
//display about information in Information message
    JOptionPane.showMessageDialog(null,"DVD Library\nKris Andrews\nVersion 1.0\nCreated on Feb 23, 2011","About",JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void clearMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearMenuItemActionPerformed
       
        //clear fields
        clearButton.doClick();
        
    }//GEN-LAST:event_clearMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed

      //exit the program
      exitButton.doClick();

    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void newMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuItemActionPerformed

        //clear fields
        clearButton.doClick();
        //clears dvdlibraryList
        DefaultListModel lm = (DefaultListModel)dvdlibraryList.getModel();
         lm.clear();

        setTitle("DVD Library");  // restore the title
        dvdlibFileChooser.setCurrentDirectory(null); // reset to current directory
        dvdlibFileChooser.setSelectedFile(null); // reset selected file
        //  clear the screen and the JList
    }//GEN-LAST:event_newMenuItemActionPerformed

    private void ratingComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ratingComboBoxActionPerformed

    }//GEN-LAST:event_ratingComboBoxActionPerformed

    private void storeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeButtonActionPerformed
        String ratingn = (String)genreComboBox.getSelectedItem();
       
       if (ratingn == null || ratingn.equals(""))
           
       {
       JOptionPane.showMessageDialog (this,"Genre ComboBox must not be empty", "Error", JOptionPane.ERROR_MESSAGE);
       return;
       }


        String runtimen = runtimeTextField.getText();
       
       if (runtimen.equals(""))
           
       {
       JOptionPane.showMessageDialog (this,"Runtime Field must not be empty", "Error", JOptionPane.ERROR_MESSAGE);

       }

        String genren = genreComboBox.getSelectedItem().toString();

       if (genren.equals(""))

       {
       JOptionPane.showMessageDialog (this,"Genre ComboBox must not be empty", "Error", JOptionPane.ERROR_MESSAGE);

       }
        String runtimestring = runtimeTextField.getText();
        int runtime = 0;


        try{
           runtime = Integer.parseInt(runtimestring);

        }
        catch(NumberFormatException ex)
        {
          JOptionPane.showMessageDialog(this,"Runtime must be in minutes, ex: 1hr = 60", "Error", JOptionPane.ERROR_MESSAGE);
          return;
        }
        catch(Exception ex2)
        {
          JOptionPane.showMessageDialog(this,ex2.toString());
          return;
        }

        //retrieve data and verify its correctness
        String title = titleTextField.getText();
        String rating = ratingComboBox.getSelectedItem().toString();
        String description = descriptionTextArea.getText();
        String genre = genreComboBox.getSelectedItem().toString();
        boolean threedimensional = threedimensionalCheckBox.isSelected();

     //create an instamce of the object DVD
        DVD mydvd = new DVD();
    //set the data into each field of the Dvd object
        mydvd.title = title;
        mydvd.rating = rating;
        mydvd.runtime = runtime;
        mydvd.description = description;
        mydvd.genre = genre;
        mydvd.threedimensional = threedimensional;
    //get the listbox's DefaultListModel and tell the DefaultListmodel to add the object
        DefaultListModel lm = (DefaultListModel)dvdlibraryList.getModel();
        lm.addElement(mydvd);
    }//GEN-LAST:event_storeButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // delete DVD from List
          int index = dvdlibraryList.getSelectedIndex();
        if(index < 0)
            return;

        DefaultListModel lm = (DefaultListModel)dvdlibraryList.getModel();
        lm.remove(index);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void dvdlibraryListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_dvdlibraryListValueChanged
        // TODO add your handling code here:
        DVD mydvd = (DVD)dvdlibraryList.getSelectedValue();
        if(mydvd == null)
            return;

        titleTextField.setText(mydvd.title);
        ratingComboBox.setSelectedItem(mydvd.rating+"");
        descriptionTextArea.setText(mydvd.description);
        genreComboBox.setSelectedItem(mydvd.genre);
        threedimensionalCheckBox.setSelected(mydvd.threedimensional);

    }//GEN-LAST:event_dvdlibraryListValueChanged

    private void deleteMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMenuItemActionPerformed
        deleteButton.doClick();
    }//GEN-LAST:event_deleteMenuItemActionPerformed

    private void updateMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateMenuItemActionPerformed
       updateButton.doClick();

    }//GEN-LAST:event_updateMenuItemActionPerformed

    private void storeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeMenuItemActionPerformed
       storeButton.doClick();
    }//GEN-LAST:event_storeMenuItemActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
      dvdlibFileChooser.setDialogTitle("Select file to open");
     int result = dvdlibFileChooser.showOpenDialog(this);

     if (result != JFileChooser.APPROVE_OPTION)
        return;  // user pressed cancel

      File file = dvdlibFileChooser.getSelectedFile();
      if(!file.exists())  // does the file exist?
      {
       JOptionPane.showMessageDialog(this,"File does not exist!", "Error", JOptionPane.ERROR_MESSAGE);
       return;  // discontinue the open
      }

    String fileName = file.getPath(); // get the path  or use file.getName();
    setTitle("DVD Library  - "+fileName);  // put the file name in the title
   // to do read in the file !!
    DefaultListModel lm = (DefaultListModel)dvdlibraryList.getModel();
    lm.clear();
    try{
        Scanner input = new Scanner(file);
        input.useDelimiter("\f");
        while(input.hasNext())
        {
          DVD c = new DVD();
          if(c.read(input))
              lm.addElement(c);
          else
          {
           JOptionPane.showMessageDialog(this,"Corrupt record found!", "Error", JOptionPane.ERROR_MESSAGE);
           break;
          }
        }
        input.close();

    }
    catch(Exception ex)
    {
      JOptionPane.showMessageDialog(this,"Error reading from the file", "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        // was a file opended or save as performed ?
        
        File file = dvdlibFileChooser.getSelectedFile();
        if(file == null)
        {
           saveasMenuItem.doClick();
           return;
        }

        // to do, save the data

      try{
           PrintWriter pw = new PrintWriter(file);
           // all the statements to write the data
           DefaultListModel lm = (DefaultListModel)dvdlibraryList.getModel();
           for(int i = 0; i < lm.size(); i++)
           {
             DVD c = (DVD)lm.get(i);
             c.write(pw);
          }
           pw.close();
        }
      catch(Exception ex)
      {
        JOptionPane.showMessageDialog(this,"Error writing to file");
        System.out.println(ex.getMessage());
      }
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void saveasMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveasMenuItemActionPerformed
   
    }//GEN-LAST:event_saveasMenuItemActionPerformed

    private void saveasMenuItemActionPerformed1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveasMenuItemActionPerformed1
    dvdlibFileChooser.setDialogTitle("Select file to save to");


      int result = dvdlibFileChooser.showSaveDialog(this);
      if (result != JFileChooser.APPROVE_OPTION)
          return;  // user pressed cancel

      File file = dvdlibFileChooser.getSelectedFile();

         
      // this forces the extension to be .txt

      String name = file.getPath();
      int ext = name.lastIndexOf(".");
      if(ext < 0)  // no file extension on the file
          name = name + ".txt"; // add .txt if no file extension
      else
          name = name.substring(0,ext) + ".txt";

      file = new File(name);

      if(file.exists())  // does the file exist?
      {
       int answer = JOptionPane.showConfirmDialog(this,"File already exists, overwrite?","Error",JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
       if(answer != JOptionPane.YES_OPTION) // if they didn't press yes
           return;  // then discontinue the save
      }

      String fileName = file.getPath(); // get the path.
      setTitle("DVD Library - "+fileName);  // put the file name in the title

      // to do save the data
      try{
           PrintWriter pw = new PrintWriter(file);
           // all the statements to write the data
           DefaultListModel lm = (DefaultListModel)dvdlibraryList.getModel();
           for(int i = 0; i < lm.size(); i++)
           {
             DVD c = (DVD)lm.get(i);
             c.write(pw);
          }
           pw.close();
        }
      catch(Exception ex)
      {
        JOptionPane.showMessageDialog(this,"Error writing to file");
        System.out.println(ex.getMessage());
      }

    }//GEN-LAST:event_saveasMenuItemActionPerformed1

    private void statusCheckBoxMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusCheckBoxMenuItemActionPerformed
  boolean visible = statusCheckBoxMenuItem.isSelected();
  
  if (visible == true)
  {statusLabel.setVisible (true);}
  
  else
  {statusLabel.setVisible(false);}
    }//GEN-LAST:event_statusCheckBoxMenuItemActionPerformed

    private void threedimensionalCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threedimensionalCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_threedimensionalCheckBoxActionPerformed

    private void runtimeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runtimeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_runtimeTextFieldActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DVDLibrary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton clearButton;
    private javax.swing.JMenuItem clearMenuItem;
    private javax.swing.JButton deleteButton;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JScrollPane descriptionScrollPane;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JFileChooser dvdlibFileChooser;
    private javax.swing.JList dvdlibraryList;
    private javax.swing.JScrollPane dvdlibraryScrollPane;
    private javax.swing.JToolBar dvdprogramToolBar;
    private javax.swing.JButton exitButton;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JPopupMenu.Separator filemenuSeparator;
    private javax.swing.JComboBox genreComboBox;
    private javax.swing.JLabel genreLabel;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JPopupMenu.Separator helpmenuSeparator;
    private javax.swing.JMenuItem helptopicsMenuItem;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JMenuBar libraryMenuBar;
    private javax.swing.JMenuItem newMenuItem;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JComboBox ratingComboBox;
    private javax.swing.JLabel ratingLabel;
    private javax.swing.JLabel runtimeLabel;
    private javax.swing.JTextField runtimeTextField;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JMenuItem saveasMenuItem;
    private javax.swing.JCheckBoxMenuItem statusCheckBoxMenuItem;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JButton storeButton;
    private javax.swing.JMenuItem storeMenuItem;
    private javax.swing.JCheckBox threedimensionalCheckBox;
    private javax.swing.JLabel threedimensionalLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleTextField;
    private javax.swing.JMenu toolsMenu;
    private javax.swing.JPopupMenu.Separator toolsmenuSeparator;
    private javax.swing.JButton updateButton;
    private javax.swing.JMenuItem updateMenuItem;
    private javax.swing.JMenu viewMenu;
    // End of variables declaration//GEN-END:variables
}
